#!/bin/sh

# A script to compile for iOS simulator.

pushd .
cd source

# clean pjsip folder
echo ""
echo In directory: `pwd`
git clean -xdn
echo ""
echo "Will do inside the pjsip source folder:"
echo "    GIT CLEAN -XDF"
echo "    GIT RESET --hard HEAD"
echo ""
echo "CTRL+C to cancel now or be _VERY_ sure you want to proceed by pressing any key."
echo ""
read
git clean -xdf
git reset --hard HEAD

# configure PJSIP builds
export ARCH="-arch i386" 
export DEVPATH=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer
export CFLAGS="-O2 -m32 -miphoneos-version-min=6.0"
# NOTE: The following variables' default value are auto-configured at runtime. No need to set.
# export LDFLAGS="-O2 -m32"
# export CC=/Applications/Xcode.app/Contents/Developer/usr/bin # this breaks C compiler
# export IPHONESDK=iPhoneSimulator6.0.sdk 

# apply G729 patch and copy all needed stuff into PJSIP source tree.
git apply --stat ../g729/enable_g729.patch
git apply ../g729/enable_g729.patch
cp -iv ../g729/g729a_include/*.h third_party/
cp ../g729/pj_g729.h third_party/
cp ../g729/pj_g729.c pjmedia/src/pjmedia-codec/g729.c # so it compiles as part of pjsip

mkdir -p third_party/lib
cp ../g729/libg729a.a third_party/lib/libg729codec-arm-apple-darwin10.a

# ... and build
./configure-iphone | tee ../configure.log
make dep | tee ../make-dep.log
make | tee ../make.log
popd

# copy all built static libs into one folder so it's easy to use.
for x in `find source | grep "\.a$"`
do
  cp ./$x ./lib
done

# list all include folders for convenience (when configuring the xcode target)
echo
echo "### includes"
find source | grep "\\include$"
echo
echo "### arch"
find source | grep "\.a$" | xargs lipo -info 2>/dev/null \
  | grep "architecture" | sed -El "s/^.+\: .+\/(.+) is architecture\: (.+)$/\\1 - \\2/g"

